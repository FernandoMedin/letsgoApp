// Ionic Starter App

// angular.module is a global place for creating, registering and retrieving Angular modules
// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)
// the 2nd parameter is an array of 'requires'
// 'starter.controllers' is found in controllers.js
angular.module('letsgo',
    ['ionic'
    ,'satellizer'
    ,'letsgo.menu'
    ,'letsgo.login'
    ,'letsgo.dashboard'
    ,'letsgo.profile'
    ,'letsgo.event'
    ])

.run(function($ionicPlatform) {
    $ionicPlatform.ready(function() {
        // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
        // for form inputs)
        if (window.cordova && window.cordova.plugins.Keyboard) {
            cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
        }
        if (window.StatusBar) {
            // org.apache.cordova.statusbar required
            StatusBar.styleDefault();
        }
    });
})

.config(function($stateProvider, $urlRouterProvider) {
    $stateProvider

    .state('intro', {
        url: '/login'
      , templateUrl: "templates/intro.html"
      , controller: 'LoginController'
    })
    .state('app', {
        url: "/app",
        abstract: true,
        templateUrl: "templates/menu.html",
        controller: 'MenuController'
    })
    .state('app.dashboard', {
        url: "/dashboard"
      , authenticate: true
      , views: {
            'menuContent': {
                templateUrl: "templates/dashboard.html"
              , controller: "DashboardController"
            }
        }
    })
    .state('app.events', {
        url: "/events"
      , authenticate: true
      , views: {
            'menuContent': {
                templateUrl: "templates/events.html"
              , controller: "EventController"
            }
        }
    })
    .state('app.profile', {
        url: "/profile",
        views: {
            'menuContent': {
                templateUrl: "templates/profile.html",
                controller: 'ProfileController'
            }
        }
    });
    // if none of the above states are matched, use this as the fallback
    $urlRouterProvider.otherwise('/login');
})
.config(function ($ionicConfigProvider, $authProvider) {

    // Enable native scrolls for Android platform only,
    // as you see, we're disabling jsScrolling to achieve this.
    if(ionic.Platform.isAndroid())
        $ionicConfigProvider.scrolling.jsScrolling(true);

    if (ionic.Platform.isIOS() || ionic.Platform.isAndroid())
        $authProvider.platform = 'mobile';

    var commonConfig = {
        popupOptions: {
            location: 'no',
            toolbar: 'no',
            width: window.screen.width,
            height: window.screen.height
        },
    };

    // $authProvider.baseUrl = 'http://localhost:8000/';
    $authProvider.baseUrl = 'https://shrouded-castle-8160.herokuapp.com/';
    $authProvider.loginUrl = '/api-auth/';
    $authProvider.loginRedirect = '/app/dashboard';
    $authProvider.logoutRedirect = '/login';
    $authProvider.signupUrl = '/users/';
    $authProvider.signupRedirect = '/app/dashboard';
    $authProvider.authToken = 'Token';
    $authProvider.facebook(angular.extend({}, commonConfig, {
        clientId: '1393877900943102',
        url: '/auth/facebook/'
    }));
})
.run(function($rootScope, $state, $auth){
    $rootScope.$on("$stateChangeStart", function(event, toState, toParams, fromState, fromParams){
        if(toState.authenticate === true){
            if($auth.isAuthenticated() === false) {
                $state.transitionTo('intro');
            }
        }
    });
});

angular.module('letsgo.dashboard', ['letsgo.dashboard.controllers']);

angular.module('letsgo.dashboard.controllers', [])
.controller('DashboardController', DashboardController);

DashboardController.$inject = ['$scope', '$auth'];
function DashboardController($scope, $auth){

}

angular.module('letsgo.event', ['letsgo.event.controllers', 'letsgo.event.services']);

angular.module('letsgo.event.controllers', [])
.controller('EventController', EventController);


EventController.$inject = ['$scope', '$auth'];
function EventController($scope, $auth){

}

angular.module('letsgo.event.services', [])
.service('EventService', EventService);

EventService.$inject = ['$http'];
function EventService($http){

}

angular.module('letsgo.login', ['letsgo.login.controllers']);

angular.module('letsgo.login.controllers', [])
.controller('LoginController', LoginController);

LoginController.$inject = ['$scope', '$auth', '$ionicModal'];

function LoginController($scope, $auth, $ionicModal){

    $scope.login = function(){
        $auth.login({
            email: $scope.email
          , password: $scope.password
        });
    };

    $scope.signup = function(form){
        $auth.signup(form).then(function(data){
            console.log(data);
            $scope.closeLogin();
        }).catch(function(err){
            console.log(err);
        });
    };

    $scope.authenticate = function(provider){
        $auth.authenticate(provider).then(function(data){
            $scope.authenticated = true;
            console.log(data);
        }, function(error) {
            console.log(error);
        });
    };

    // Create the login modal that we will use later
    $ionicModal.fromTemplateUrl('templates/login.html', {
        scope: $scope
    }).then(function(modal) {
        $scope.modal = modal;
    });

    $scope.signupModal = function() {
        $scope.modal.show();
    };

    $scope.closeLogin = function() {
        $scope.modal.hide();
    };
}

angular.module('letsgo.menu.controllers', [])

.controller('MenuController', function($scope, $ionicModal, $timeout, $auth, ProfileService) {
    // Form data for the login modal
    $scope.loginData = {};

    ProfileService.getProfile().then(function(data){
        $scope.user = data.data;
    });

    // Create the login modal that we will use later
    $ionicModal.fromTemplateUrl('templates/login.html', {
        scope: $scope
    }).then(function(modal) {
        $scope.modal = modal;
    });

    // Triggered in the login modal to close it
    $scope.closeLogin = function() {
        $scope.modal.hide();
    };

    // Open the login modal
    $scope.login = function() {
        $scope.modal.show();
    };

    $scope.logout = function() {
        $auth.logout();
    };

    // Perform the login action when the user submits the login form
    $scope.doLogin = function() {
        console.log('Doing login', $scope.loginData);

        // Simulate a login delay. Remove this and replace with your login
        // code if using a login system
        $timeout(function() {
            $scope.closeLogin();
        }, 1000);
    };
})

.controller('PlaylistsCtrl', function($scope) {
    $scope.playlists = [
        { title: 'Eventos', id: 1 }
    ];
})

.controller('PlaylistCtrl', function($scope, $stateParams) {
});

angular.module('letsgo.menu', ['letsgo.menu.controllers']);

angular.module('letsgo.profile', ['letsgo.profile.controllers', 'letsgo.profile.services']);

angular.module('letsgo.profile.controllers', [])
.controller('ProfileController', ProfileController);


ProfileController.$inject = ['$scope', '$auth', 'ProfileService'];
function ProfileController($scope, $auth, ProfileService){
    ProfileService.getProfile().then(function(data){
        $scope.user = data.data;
        console.log(data.data);
    });
}

angular.module('letsgo.profile.services', [])
.service('ProfileService', ProfileService);

ProfileService.$inject = ['$http', '$auth'];
function ProfileService($http, $auth){

    // console.log($auth);
    var baseUrl = 'https://shrouded-castle-8160.herokuapp.com';

    this.getProfile = function(){
        return $http.get(baseUrl+'/current/');
    };
}
